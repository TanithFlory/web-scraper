// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  password   String
  isVerified Boolean  @default(false)
  scrapes    Scrape[]
  otp        otp?
}

model otp {
  id        Int      @id @default(autoincrement())
  code      Int
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
}

model Scrape {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [productId])
  productId String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@unique([userId, productId])
}

model Product {
  id           Int            @id @default(autoincrement()) //internal id
  productId    String         @unique //external id
  title        String         @db.Text()
  currentPrice String
  image        String
  totalReviews String         @default("0")
  rating       String         @default("0")
  scrapeCount  Int            @default(0)
  Scrape       Scrape[]
  priceHistory PriceHistory[]
  graphSrc     String         @db.Text()
}

model PriceHistory {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [productId])
  productId String
  price     Float
  createdAt DateTime @default(now())
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
